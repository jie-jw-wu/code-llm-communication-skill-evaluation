{
    "name": "HumanEval/1_prompt1p",
    "response_candidates": [
        "```python\ndef separate_paren_groups(paren_string: str) -> List[str]:\n    count = 0\n    start = 0\n    result = []\n    \n    for i, char in enumerate(paren_string):\n        if char == '(':\n            count += 1\n        elif char == ')':\n            count -= 1\n\n        if count == 0:\n            result.append(paren_string[start:i+1])\n            start = i+1\n    \n    return result\n```"
    ],
    "code_candidates": [
        {
            "code": "def separate_paren_groups(paren_string: str) -> List[str]:\n    count = 0\n    start = 0\n    result = []\n    \n    for i, char in enumerate(paren_string):\n        if char == '(':\n            count += 1\n        elif char == ')':\n            count -= 1\n\n        if count == 0:\n            result.append(paren_string[start:i+1])\n            start = i+1\n    \n    return result",
            "index": 0,
            "passed_case": [],
            "case_status": [
                "execution error: 1",
                "execution error: 1",
                "execution error: 1",
                "execution error: 1"
            ],
            "question_quality": "0"
        }
    ]
}
{
    "name": "HumanEval/1_prompt1p",
    "response_candidates": [
        "```python\ndef separate_paren_groups(paren_string: str) -> List[str]:\n    count = 0\n    start = 0\n    result = []\n    \n    for i, char in enumerate(paren_string):\n        if char == '(':\n            count += 1\n        elif char == ')':\n            count -= 1\n\n        if count == 0:\n            result.append(paren_string[start:i+1])\n            start = i+1\n    \n    return result\n```"
    ],
    "code_candidates": [
        {
            "code": "def separate_paren_groups(paren_string: str) -> List[str]:\n    count = 0\n    start = 0\n    result = []\n    \n    for i, char in enumerate(paren_string):\n        if char == '(':\n            count += 1\n        elif char == ')':\n            count -= 1\n\n        if count == 0:\n            result.append(paren_string[start:i+1])\n            start = i+1\n    \n    return result",
            "index": 0,
            "passed_case": [],
            "case_status": [
                "execution error: 1",
                "execution error: 1",
                "execution error: 1",
                "execution error: 1"
            ],
            "question_quality": "0"
        }
    ]
}